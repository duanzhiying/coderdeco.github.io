<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>coderdeco</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://coderdeco.github.io/"/>
  <updated>2018-02-21T17:58:05.704Z</updated>
  <id>https://coderdeco.github.io/</id>
  
  <author>
    <name>coderdeco</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Corrector ortográfico en Vim</title>
    <link href="https://coderdeco.github.io/2018/02/21/corrector-ortografico-vim/"/>
    <id>https://coderdeco.github.io/2018/02/21/corrector-ortografico-vim/</id>
    <published>2018-02-21T17:10:07.000Z</published>
    <updated>2018-02-21T17:58:05.704Z</updated>
    
    <content type="html"><![CDATA[<p>Vim nos permite detectar errores ortográficos de una manera muy sencilla, para  activar la corrección automática ejecuta: <code>:set spell</code> (El idioma por defecto es el Inglés).</p><p>Podemos elegir otro idioma ejecutando: <code>:set spell spelllang=es</code>, este comando activaría la corrección en el idioma Español (El parámetro <strong>es</strong> indica que la corrección que deseamos es al idioma Español).</p><p>Vim no viene con soporte para otros idiomas aparte del Inglés, por lo que sera necesario añadir un diccionario en Español, para eso seguimos los siguientes pasos:</p><ol><li><p>Buscamos un diccionario para el idioma que se requiera, en este caso el Español, vamos a descargarlo de <strong>extensions.libreoffice.org</strong> <a href="https://extensions.libreoffice.org/extensions/spanish-dictionaries/2.1/@@download/file/es_any.oxt" target="_blank" rel="noopener">Descargar</a></p></li><li><p>Se ha descargado el siguiente archivo <code>es_any.oxt</code>, es necesario descomprimirlo:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ unzip ./es_any.oxt</span><br></pre></td></tr></table></figure></li><li><p>Ahora debemos crear el archivo <code>es.utf-8.spl</code>, para esto ejecuta dentro de  Vim: <code>:mkspell es es_ANY</code> (Inicia Vim dentro del mismo directorio donde se descomprimió el archivo <strong>es_any.oxt</strong>)</p></li><li><p>Se ha generado un nuevo archivo <code>es.utf-8.spl</code>, muevelo al directorio <code>~/.vim/spell/</code> ó <code>/usr/share/vim/vim80/spell/</code> (Esta ultima ruta puede variar dependiendo de tu versión de Vim)</p></li><li><p>Iniciamos Vim y probamos el corrector, para esto escribimos cualquier palabra -Con error ortográfico- y ejecutamos: <code>set spell spelllang=es</code>. A continuación deberá marcar un error en las palabras mal escritas.</p></li></ol><p>Para mas información ejecuta en Vim: <code>:h spell</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Vim nos permite detectar errores ortográficos de una manera muy sencilla, para  activar la corrección automática ejecuta: &lt;code&gt;:set spel
      
    
    </summary>
    
    
      <category term="vim" scheme="https://coderdeco.github.io/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>Calcular Raíz Cuadrada en Python</title>
    <link href="https://coderdeco.github.io/2017/12/31/python-raiz-cuadrada/"/>
    <id>https://coderdeco.github.io/2017/12/31/python-raiz-cuadrada/</id>
    <published>2018-01-01T01:06:39.000Z</published>
    <updated>2018-02-20T06:02:16.249Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Raiz-Cuadrada"><a href="#Raiz-Cuadrada" class="headerlink" title="Raíz Cuadrada"></a>Raíz Cuadrada</h2><p>En matemáticas, la raíz cuadrada de un número <strong>x</strong>, es el número que al ser multiplicado por sí mismo —elevarlo al cuadrado— resulta en <strong>x</strong> nuevamente (La raíz cuadrada de 25 es 5, ya que si multiplicamos 5x5 es igual a 25), Entonces podriamos decir que es la <strong>potenciación con exponente 1⁄2</strong>.</p><h2 id="Calcular-en-Python"><a href="#Calcular-en-Python" class="headerlink" title="Calcular en Python"></a>Calcular en Python</h2><h3 id="Libreria-Math"><a href="#Libreria-Math" class="headerlink" title="Librería Math"></a>Librería Math</h3><p>Para calcular la raíz cuadrada de cualquier numero (<em>positivo</em>) se puede utilizar la librería <code>math</code> en python, por ejemplo:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sqrt</span><br><span class="line"></span><br><span class="line">num  = <span class="number">25</span></span><br><span class="line">raíz = sqrt(num)</span><br><span class="line"><span class="keyword">print</span> <span class="string">"La raíz cuadrada de &#123;&#125; es: &#123;&#125;"</span>.format(num, raíz)</span><br></pre></td></tr></table></figure></p><h3 id="Manual"><a href="#Manual" class="headerlink" title="Manual"></a>Manual</h3><p>Si no desea utilizar la librería <code>math</code>, usted puede hacerlo de forma manual, tomando en cuenta lo antes dicho <em>“Es la potenciación con exponente 1⁄2.”</em>, Veamos un ejemplo:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line">num  = <span class="number">25</span></span><br><span class="line">raíz = num ** <span class="number">0.5</span> <span class="comment"># Potenciación con exponente 0.5 (1⁄2)</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">"La raíz cuadrada de &#123;&#125; es: &#123;&#125;"</span>.format(num, raíz)</span><br></pre></td></tr></table></figure></p><h2 id="Ejercicio"><a href="#Ejercicio" class="headerlink" title="Ejercicio"></a>Ejercicio</h2><blockquote><p>Este ejercicio se obtuvo de <a href="https://www.codewars.com" target="_blank" rel="noopener">coderwars</a>, si estas buscando mejorar tus habilidades en <strong>Python</strong> o algún otro lenguaje de programación únete a esta comunidad.</p></blockquote><p>Escriba un programa en python que determine si un número entero es un <strong>cuadrado perfecto</strong>, por ejemplo:</p><p>is_square (-1) # =&gt; False<br>is_square (25) # =&gt; True<br>is_square (26) # =&gt; False</p><ul><li><p>Un número cuadrado perfecto en matemáticas, es un número entero que es el cuadrado de algún otro; dicho de otro modo, es un número cuya raíz cuadrada es un número natural.</p></li><li><p>Un número <strong>es un cuadrado perfecto si se puede ordenar en una figura cuadrada</strong>. Por ejemplo, 9 es un número cuadrado perfecto ya que puede ser escrito como 3×3, y se puede ordenar del siguiente modo:<br><img src="https://upload.wikimedia.org/wikipedia/commons/4/4c/Square_number_9.png" alt="File:Square number 9.png"></p></li></ul><p><strong>Solución:</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line">nums = [<span class="number">-1</span>, <span class="number">25</span>, <span class="number">26</span>, <span class="number">35</span>, <span class="number">36</span>] <span class="comment"># Lista de números a verificar</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_square</span><span class="params">(n)</span>:</span></span><br><span class="line">    <span class="comment"># No podemos calcular la raíz cuadrada de números negativos</span></span><br><span class="line">    <span class="keyword">if</span> n &gt; <span class="number">0</span>: </span><br><span class="line">        <span class="comment"># Obtenemos la raíz cuadrada del numero en un entero, es decir,</span></span><br><span class="line">        <span class="comment"># si la raíz es 2.6 obtendremos 3</span></span><br><span class="line">        r = int(n ** <span class="number">0.5</span>) </span><br><span class="line">        <span class="comment"># Si elevamos la raíz al cuadrado y obtenemos el mismo numero</span></span><br><span class="line">        <span class="comment"># sera un numero cuadro perfecto.</span></span><br><span class="line">        <span class="keyword">if</span> r ** <span class="number">2</span> == n: </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">        <span class="keyword">else</span>: </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> nums:</span><br><span class="line">    result = is_square(num)</span><br><span class="line">    <span class="keyword">print</span> num, <span class="string">"-&gt;"</span>, result</span><br></pre></td></tr></table></figure></p><p><strong>Optimización:</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line">nums = [<span class="number">-1</span>, <span class="number">25</span>, <span class="number">26</span>, <span class="number">35</span>, <span class="number">36</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_square</span><span class="params">(n)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> n &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span> <span class="keyword">if</span> (n ** <span class="number">0.5</span>) % <span class="number">1</span> == <span class="number">0</span> <span class="keyword">else</span> <span class="keyword">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> nums:</span><br><span class="line">    <span class="keyword">print</span> x, <span class="string">"-&gt;"</span>, is_square(x)</span><br></pre></td></tr></table></figure></p><p><strong>Salida:</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ python is_square.py</span><br><span class="line">-1 -&gt; False</span><br><span class="line">25 -&gt; True</span><br><span class="line">26 -&gt; False</span><br><span class="line">35 -&gt; False</span><br><span class="line">36 -&gt; True</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Raiz-Cuadrada&quot;&gt;&lt;a href=&quot;#Raiz-Cuadrada&quot; class=&quot;headerlink&quot; title=&quot;Raíz Cuadrada&quot;&gt;&lt;/a&gt;Raíz Cuadrada&lt;/h2&gt;&lt;p&gt;En matemáticas, la raíz cu
      
    
    </summary>
    
    
      <category term="Python" scheme="https://coderdeco.github.io/tags/Python/"/>
    
      <category term="Matemáticas" scheme="https://coderdeco.github.io/tags/Matematicas/"/>
    
  </entry>
  
</feed>
